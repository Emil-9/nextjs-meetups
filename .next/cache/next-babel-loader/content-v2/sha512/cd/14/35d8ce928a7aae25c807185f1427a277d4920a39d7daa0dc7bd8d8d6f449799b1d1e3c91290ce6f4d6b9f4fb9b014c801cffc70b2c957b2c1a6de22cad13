{"ast":null,"code":"// /api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body; //   this credentials will never appear on the client side\n    // so it's safe to use it here\n\n    const uri = \"mongodb+srv://MONGODB_ADMIN_EMIL:xkSbrZ_S*93Muv5@cluster0.tjey8.mongodb.net/meetups?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db();\n    const meetupCollection = db.collection(\"meetups\");\n    const result = meetupCollection.insertOne(data);\n    client.close();\n    res.status(201).json({\n      message: \"Meetup inserted.\"\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/emil/Desktop/React-JS Course/next-app-2/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","uri","client","connect","db","meetupCollection","collection","result","insertOne","close","status","json","message"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CADyB,CAEzB;AACA;;AACA,UAAMC,GAAG,GACP,iHADF;AAGA,UAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoBF,GAApB,CAArB;AAEA,UAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,UAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,UAAMC,MAAM,GAAGF,gBAAgB,CAACG,SAAjB,CAA2BT,IAA3B,CAAf;AACAG,IAAAA,MAAM,CAACO,KAAP;AACAZ,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AACD,eAAejB,OAAf","sourcesContent":["// /api/new-meetup\n\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    //   this credentials will never appear on the client side\n    // so it's safe to use it here\n    const uri =\n      \"mongodb+srv://MONGODB_ADMIN_EMIL:xkSbrZ_S*93Muv5@cluster0.tjey8.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n    const client = await MongoClient.connect(uri);\n\n    const db = client.db();\n    const meetupCollection = db.collection(\"meetups\");\n    const result = meetupCollection.insertOne(data);\n    client.close();\n    res.status(201).json({ message: \"Meetup inserted.\" });\n  }\n}\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}